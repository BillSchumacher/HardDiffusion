"""
Django settings for HardDiffusion project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import platform
import random
import sys
from pathlib import Path

import dj_database_url
import orjson
import sentry_sdk
from dotenv import load_dotenv
from kombu.serialization import register
from sentry_sdk.integrations.django import DjangoIntegration

load_dotenv()
os.environ.setdefault('FORKED_BY_MULTIPROCESSING', '1')
SENTRY_DSN = os.getenv('SENTRY_DSN', "https://33009b0658104b1ba13167fd3c56da0d@o348660.ingest.sentry.io/4504739432693760")
sentry_sdk.init(
    dsn=SENTRY_DSN,
    integrations=[
        DjangoIntegration(),
    ],

    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # We recommend adjusting this value in production.
    traces_sample_rate=0.01,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=False
)

_hostname = os.getenv(
    'HOSTNAME',
    os.getenv('COMPUTERNAME', platform.node())
)
if '.' in _hostname:
    _hostname = _hostname.split('.')[0]
HOSTNAME = _hostname
LOGIN_URL = "/api/v1/auth/login/"

STATIC_HOST = os.getenv('STATIC_HOST', 'localhost:8000')
# Uses http instead of https.
USE_LOCALHOST = STATIC_HOST == "localhost:8000" or \
    os.getenv('USE_LOCALHOST', 'false').lower() == 'true'
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
DEFAULT_TEXT_TO_IMAGE_MODEL = os.getenv('DEFAULT_TEXT_TO_IMAGE_MODEL', 'CompVis/stable-diffusion-v1-4')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', '%030x' % random.randrange(16))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "daphne",
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_registration',
    'dynamic_rest',
    'api',
    'generate',
    'train',
    'user',
    'model',
    'django_celery_results',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HardDiffusion.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = "HardDiffusion.asgi.application"
WSGI_APPLICATION = 'HardDiffusion.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {
    'default': dj_database_url.config(
        default=f"sqlite:///{ BASE_DIR / 'db.sqlite3'}"
    )
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_CLASSES = [
    'UserAttributeSimilarityValidator',
    'MinimumLengthValidator',
    'CommonPasswordValidator',
    'NumericPasswordValidator'
]

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': f"django.contrib.auth.password_validation.{clazz}"}
    for clazz in AUTH_PASSWORD_CLASSES
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
    # '/var/www/static/',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Celery settings
REDIS_CONNECTION_STRING = os.getenv(
    'REDIS_CONNECTION_STRING', 'redis://127.0.0.1:6379/5'
)


def dumps(obj):
    return orjson.dumps(obj, option=orjson.OPT_SERIALIZE_NUMPY)


def loads (obj):
    return orjson.loads(obj)


register('orjson', dumps, loads,
         content_type='application/x-orjson',
         content_encoding='utf-8')

CELERY_RESULT_ACCEPT_CONTENT = ['application/x-orjson']
CELERY_ACCEPT_CONTENT = ['application/x-orjson']
ACCEPT_CONTENT = ['application/x-orjson']
RESULT_ACCEPT_CONTENT = ['orjson']
CELERY_TASK_SERIALIZER = 'orjson'
TASK_SERIALIZER = 'orjson'
CELERY_RESULT_SERIALIZER = 'orjson'
RESULT_SERIALIZER = 'orjson'
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_CACHE_BACKEND = REDIS_CONNECTION_STRING
CELERY_BROKER_URL = REDIS_CONNECTION_STRING
CELERY_RESULT_BACKEND = REDIS_CONNECTION_STRING
CELERY_TIMEZONE = TIME_ZONE
AUTH_USER_MODEL = 'user.User'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.pubsub.RedisPubSubChannelLayer",
        "CONFIG": {
            "hosts": [REDIS_CONNECTION_STRING],
        },
    },
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10.,
    'DEFAULT_RENDERER_CLASSES': [
        # 'rest_framework.renderers.JSONRenderer',
        "drf_orjson_renderer.renderers.ORJSONRenderer",
        # 'rest_framework.renderers.BrowsableAPIRenderer',
        'dynamic_rest.renderers.DynamicBrowsableAPIRenderer',
    ],
    "ORJSON_RENDERER_OPTIONS": (
        # orjson.OPT_NON_STR_KEYS,
        # orjson.OPT_SERIALIZE_DATACLASS,
        # orjson.OPT_SERIALIZE_NUMPY,
        # orjson.OPT_APPEND_NEWLINE,
        # orjson.OPT_SERIALIZE_UUID,
        # orjson.OPT_INDENT_2,
    ),
    # "DEFAULT_PARSER_CLASSES": (
    #    "drf_orjson_renderer.parsers.ORJSONParser",
    # ),
}
REGISTRATION_FRONTEND_URL = os.getenv('REGISTRATION_FRONTEND_URL', 'http://localhost:8000/')
DEFAULT_EMAIL_SENDER = os.getenv('DEFAULT_EMAIL_SENDER', 'no-reply@example.com')
REST_REGISTRATION = {
    'REGISTER_VERIFICATION_ENABLED': True,
    'REGISTER_EMAIL_VERIFICATION_ENABLED': True,
    'RESET_PASSWORD_VERIFICATION_ENABLED': True,
    'REGISTER_VERIFICATION_URL': f'{REGISTRATION_FRONTEND_URL}verify-user/',
    'RESET_PASSWORD_VERIFICATION_URL': f'{REGISTRATION_FRONTEND_URL}reset-password/',
    'REGISTER_EMAIL_VERIFICATION_URL': f'{REGISTRATION_FRONTEND_URL}verify-email/',
    'VERIFICATION_FROM_EMAIL': DEFAULT_EMAIL_SENDER,
}
